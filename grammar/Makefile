BASE?=..
include ../Makefile.include

SOURCE_PATH=$(BASE)/$(DLS)
SOURCE=$(SOURCE_PATH)/dartLangSpec.tex
DATE?=`date "+%Y-%m-%d"`
TOOL_PATH=$(BASE)/tool
GEXCERPT_BASE=./grammar-tmp
GOUT_FILE_BASE=$(TARGET_PATH)/grammar$(GOUT_FILE_SUFFIX)

.PHONY:	default grammar pdf clean show gen cp front-tmp front-tmp.sty

default: grammar

grammar: front-tmp gen cp

gen:;	perl -f $(TOOL_PATH)/excerpt-grammar.pl $(SOURCE) > $(GEXCERPT_BASE).tex
	perl -0777 -pf $(TOOL_PATH)/tex-grammar-to-md.pl \
		$(GEXCERPT_BASE).tex > $(GEXCERPT_BASE)-base.md
	perl -pe "s/__/\`/g; s/;\s*$$/\n/g;" $(GEXCERPT_BASE)-base.md > $(GEXCERPT_BASE).txt
	perl -pf $(TOOL_PATH)/add-links.pl $(GEXCERPT_BASE)-base.md > $(GEXCERPT_BASE).md

cp:;	cat front-tmp.txt $(GEXCERPT_BASE).txt > $(GOUT_FILE_BASE).txt
	cat front-tmp.md $(GEXCERPT_BASE).md > $(GOUT_FILE_BASE).md

front-tmp:
	echo "# Dart Programming Language Grammar" > front-tmp.md
	echo "### Version $(VERS), $(DATE)" >> front-tmp.md
	echo  >> front-tmp.md
	perl -pe 's/#+ //g;' front-tmp.md > front-tmp.txt

pdf: front-tmp.sty
	cp $(SOURCE_PATH)/dart.sty dart-tmp.sty
	echo '\\begin{grammar}' > $(GEXCERPT_BASE)2.tex
	cat $(GEXCERPT_BASE).tex >> $(GEXCERPT_BASE)2.tex
	echo '\\end{grammar}' >> $(GEXCERPT_BASE)2.tex
	pdflatex grammar.tex
	pdflatex grammar.tex
	pdflatex grammar.tex
	-cp grammar.pdf $(BASE)/$(DOC)

front-tmp.sty:
	echo "\def\dartV{$(VERS)}" > front-tmp.sty
	echo "\def\dartReleaseDate{$(DATE)}" >> front-tmp.sty
	echo  >> front-tmp.sty

clean:;	-rm $(GEXCERPT_BASE)*.* *.aux *.dvi *.log *.out *~ *-tmp.* grammar.pdf 

show:;	@echo
	@echo ------------------------
	head $(GOUT_FILE_BASE).md
	@echo ...

#------------------------------------------------------------------------------
#
# pdf from grammar-main.tex is not currently used
# $(GOUT_FILE_BASE).pdf:
# ...
#
# PDF generated by the following command is not really usable.
#
# pdf-from-md: grammar
#	pandoc -s --latex-engine=xelatex -f markdown-raw_tex \
{#		front.md $(GOUT_FILE_BASE).md -o $(GOUT_FILE_BASE).pdf

